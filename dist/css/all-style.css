/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.breadcrumbs-items .inner ul.breadcrumb{padding:10px 16px;list-style:none}.breadcrumbs-items .inner ul.breadcrumb li{display:inline;font-size:16px;line-height:26px}.breadcrumbs-items .inner ul.breadcrumb li+li:before{color:#000;content:"/\00a0"}.breadcrumbs-items .inner ul.breadcrumb li a{color:#8f8f8f;text-decoration:none}.breadcrumbs-items .inner ul.breadcrumb li a:hover{color:#00c1ff}.main-container{width:1170px;margin:104px auto 107px auto;height:auto}.main-container .main-wrapper{margin-bottom:100px;width:100%;height:auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.main-container .main-wrapper__left{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column;flex-flow:column;width:764px;height:933px}.main-container .main-wrapper__left .row{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:auto;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.main-container .main-wrapper__left .row .main-photo{width:606px;height:682px;background-color:#fff;-webkit-box-shadow:0 0 40px rgba(89,102,116,.1);box-shadow:0 0 40px rgba(89,102,116,.1)}.main-container .main-wrapper__right{width:385px;height:933px}.slider{position:relative;width:138px;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column;flex-flow:column;padding-top:35px}.slider :nth-child(4){border:2px solid #fa9e25}.slider__image{-webkit-box-shadow:0 0 40px rgba(89,102,116,.1);box-shadow:0 0 40px rgba(89,102,116,.1);width:138px;height:138px;background-color:#fff;margin-bottom:20px;background-image:url(../../../images/main-image.jpg);background-position:center;background-repeat:no-repeat;background-size:contain}.slider .control .arrow{position:absolute;width:18px;height:9px;background-image:url(../../../images/arrowUp.svg)}.slider .control .arrow-up{top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.slider .control .arrow-up:hover{color:#11b5ed;cursor:pointer}.slider .control .arrow-down{bottom:0;left:50%;-webkit-transform:translateX(-50%) rotate(-180deg);transform:translateX(-50%) rotate(-180deg)}.slider .control .arrow-down:hover{color:#11b5ed;cursor:pointer}.description{margin-top:32px;width:764px;height:219px;background-color:#fff;padding:0 33px;-webkit-box-shadow:0 0 40px rgba(89,102,116,.1);box-shadow:0 0 40px rgba(89,102,116,.1)}.description h2{font-size:26px;line-height:40px;color:#111}.description p{font-size:16px;line-height:26px;color:#555}.aside{width:100%;height:100%}.aside__first-info{width:100%;min-height:180px;height:auto;padding:10px 30px 10px 30px;background-color:#fff;-webkit-box-shadow:0 0 40px rgba(89,102,116,.1);box-shadow:0 0 40px rgba(89,102,116,.1);margin-bottom:30px}.aside__first-info p{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:16px;color:#8f8f8f}.aside__first-info p span{color:#000}.aside__second-info{width:100%;height:723px;padding:10px 30px 10px 0;background-color:#fff;-webkit-box-shadow:0 0 40px rgba(89,102,116,.1);box-shadow:0 0 40px rgba(89,102,116,.1)}.aside__second-info .row{width:100%;padding-left:32px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.aside__second-info .row .author-image{margin-right:13px;width:32px;height:32px;border-radius:50%;background:#c4c4c4}.aside__second-info .change-list h3{padding-left:30px;font-style:normal;font-weight:400;font-size:16px;line-height:26px;color:#8f8f8f}.aside__second-info .change-list ul{margin-left:18px;list-style-image:url(../../../images/list-style.svg)}.aside__second-info .change-list ul li{font-style:normal;font-weight:400;font-size:14px;line-height:24px;color:#111}.aside__second-info .change-list__btn{margin-top:40px;margin-left:30px;width:251px;height:48px;left:1175px;top:753px;outline:0;border:none;background:#00c1ff;border-radius:24px;text-transform:uppercase;font-style:normal;font-size:16px;line-height:26px;color:#fff}.aside__second-info .change-list__btn:hover{cursor:pointer}.aside__second-info .description-item{margin-top:50px;margin-left:30px}.aside__second-info .description-item__info{width:100%}.aside__second-info .description-item__info .information{height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:80%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.aside__second-info .description-item__info .information p{font-size:16px;line-height:26px;font-style:normal;font-weight:400;color:#8f8f8f}.aside__second-info .description-item__info .information span{color:#11171f}.slider-news{width:100%;height:auto}.slider-news h1{position:relative;font-size:27px;line-height:24px;text-transform:uppercase;color:#11b5ed;margin-bottom:50px;display:inline-block;width:auto;margin-left:27px}.slider-news h1::before{content:"";position:absolute;left:-27px;top:8px;width:8px;height:8px;border-radius:50%;background:#12b6ed}.slider-news h1::after{content:"";position:absolute;top:8px;right:-27px;width:8px;height:8px;border-radius:50%;background:#12b6ed}.slider-news .cards{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.card-body{position:relative;width:280px;height:419px;border:2px dashed #c4c4c4;background-color:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:19px;overflow:hidden;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column;flex-flow:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.card-body__image{width:100%;height:247px;background-image:url(../../../images/bicycle.jpg);background-position:center;background-repeat:no-repeat;background-size:cover;-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:19px 19px 0 0}.card-body__title{margin-top:10px;width:203px;text-align:center;font-size:16px;line-height:19px}.card-body__location{margin-top:15px;font-size:14px;line-height:24px;text-align:center;color:#00c0ff;position:relative;display:inline-block;cursor:pointer}.card-body__location::before{content:"";position:absolute;left:-18px;top:2px;width:15px;height:15px;background:url(../../../images/location.svg);background-repeat:no-repeat}.card-body__button{position:absolute;bottom:25px}.card-body__button button{width:230px;width:222px;height:49px;background:#12b6ed;border-radius:63px;outline:0;border:none;color:#fff}.card-body__button button:hover{cursor:pointer}.card-body__star{position:absolute;top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:50px;height:50px;border-bottom-left-radius:50%;border-bottom-right-radius:50%;background:url(../../../images/star.svg);background-position:center;background-repeat:no-repeat;background-color:#a0a0a0;z-index:10}.card-body__star:hover{cursor:pointer}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{background:#e5e5e5}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
